<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title><![CDATA[用密钥直接登录服务器]]></title>
      <url>https://arlier1.github.io/2017/06/05/sshlogin/</url>
      <content type="html"><![CDATA[<p>由于经常登录服务器每次都要输入密码感觉很麻烦，而且密码的方式安全性也不高;所以决定使用sshkey的方式登录。</p>
<h1 id="在centos7上使用密钥登录"><a href="#在centos7上使用密钥登录" class="headerlink" title="在centos7上使用密钥登录"></a>在centos7上使用密钥登录</h1><h2 id="产生密钥"><a href="#产生密钥" class="headerlink" title="产生密钥"></a>产生密钥</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">cd</span> ~</div><div class="line">mkdir .ssh</div><div class="line">chmod 700 .ssh</div><div class="line">touch authorized_keys</div><div class="line">chmod 700 authorized_keys</div><div class="line">ssh-keygen -t rsa</div><div class="line">cat id_rsa.pub &gt;&gt; authorized_keys   //保存私钥</div></pre></td></tr></table></figure>
<h2 id="配置sshd"><a href="#配置sshd" class="headerlink" title="配置sshd"></a>配置sshd</h2><p>打开/etc/ssh/sshd_config 文件，确认以下配置打开<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">RSAAuthentication yes</div><div class="line">PubkeyAuthentication yes</div><div class="line">AuthorizedKeysFile      .ssh/authorized_keys</div><div class="line">HostKey /etc/ssh/ssh_host_rsa_key</div><div class="line"><span class="comment"># 也可以顺便禁用密码登录</span></div><div class="line">ChallengeResponseAuthentication no</div><div class="line">PasswordAuthentication no</div><div class="line">UsePAM no</div></pre></td></tr></table></figure></p>
<p>重启ssh服务<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">service sshd restart</div><div class="line"><span class="built_in">source</span> ~/.bash_profile</div></pre></td></tr></table></figure></p>
<h2 id="本地设置"><a href="#本地设置" class="headerlink" title="本地设置"></a>本地设置</h2><p>在本地电脑下载服务器上生成的id_rsa文件，保存~/.ssh路径;此时只要sshroot@server_ip就可以免密码登录了，非常方便。</p>
]]></content>
      
        
        <tags>
            
            <tag> sshkey 密钥登录 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[zotera安装和使用]]></title>
      <url>https://arlier1.github.io/2017/06/01/zotera%E5%AE%89%E8%A3%85%E5%92%8C%E4%BD%BF%E7%94%A8/</url>
      <content type="html"><![CDATA[<h1 id="文献管理软件zotera"><a href="#文献管理软件zotera" class="headerlink" title="文献管理软件zotera"></a>文献管理软件zotera</h1><p>去年的时候师兄就告诉我说<a href="https://www.zotero.org/" target="_blank" rel="external">zotera</a>非常好用，当时下载了个浏览器插件版，然后自己的使用频率不高就放在那里了。现在我觉得自己需要一个工具来整理看过的文献和笔记，比较各种文献管理软件之后我决定就使用zotera了。</p>
<h1 id="ubuntu的安装"><a href="#ubuntu的安装" class="headerlink" title="ubuntu的安装"></a>ubuntu的安装</h1><p>先到<a href="https://www.zotero.org/download/" target="_blank" rel="external">官网</a>下载独版本立的安装文件<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">tar -jxvf Zotero-4.0.29.10_linux-x86_64.tar.bz2</div><div class="line"><span class="built_in">cd</span> Zotero_linux-x86_64 </div><div class="line">bash run-zotera.sh</div></pre></td></tr></table></figure></p>
]]></content>
      
        <categories>
            
            <category> program </category>
            
        </categories>
        
        
        <tags>
            
            <tag> zotera </tag>
            
            <tag> 文献管理 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[高能的物理-趣说普朗克常量]]></title>
      <url>https://arlier1.github.io/2017/05/31/%E8%B6%A3%E8%AF%B4%E6%99%AE%E6%9C%97%E5%85%8B%E5%B8%B8%E9%87%8F/</url>
      <content type="html"><![CDATA[<p>未经授权，不得转载。</p>
<h1 id="高能物理为什么“高能”？"><a href="#高能物理为什么“高能”？" class="headerlink" title="高能物理为什么“高能”？"></a>高能物理为什么“高能”？</h1><p>你可能经常听说高能物理或者粒子物理这些词汇，<br>人们通常把粒子物理称为高能物理，因为它们之间有着非常紧密的联系。粒子物理的研究对象是空间尺度非常小的物理对象，比如夸克，介子，中微子等。为了研究这么小的空间中的过程当然要想办法来发生一些相互作用来看看会有什么结果，比如我们把电子或者离子撞到一个原子核上，就可以通过散射出来的电子的空间分布知道一些关于原子核的信息。</p>
<h1 id="高能量-强穿透力"><a href="#高能量-强穿透力" class="headerlink" title="高能量=强穿透力"></a>高能量=强穿透力</h1><p>理论上我们当然想要探测越来越小的结构，最直接的想法就是我们去找一个本身就非常小的粒子来作为我们的“探针”。这时候粒子的探测能力的大小是用它的德布罗意波长来描述的[lambda=h/p]，同一种粒子当它的动量越大的时候探测能力越强。你可以试想一下，一个能量非常高的电子显然比能量低的电子更容易打入原子的内部，它的穿透能力更强。能量越高穿透力越强的例子在宏观世界更为明显，比如一个高速的子弹能够轻而易举穿过一个木板，而如果你用手把同一颗子弹扔到木板上，显然它会被弹走。</p>
<h1 id="高能量-快速的反应过程"><a href="#高能量-快速的反应过程" class="headerlink" title="高能量=快速的反应过程"></a>高能量=快速的反应过程</h1><h1 id="探索时间和空间的微小结构"><a href="#探索时间和空间的微小结构" class="headerlink" title="探索时间和空间的微小结构"></a>探索时间和空间的微小结构</h1><h1 id="不确定关系"><a href="#不确定关系" class="headerlink" title="不确定关系"></a>不确定关系</h1><p>在高能物理领域有一个非常重要的物理量-普朗克常量,它是自然界的基本常量之一：<br>h=6.62607004 × 10-34 m2 kg / s<br>国际单位m，kg，s都是我们能够切身体会到的物理量单位，前面的系数10-34意味着它和非常小的时间或者空间的过程或者质量很小的物体关联。</p>
<p>有时候人们经常也称其为普朗克常数，严格来说它是一个物理量，它的量纲是[L^2*M*T^-1]，也就是角动量的量纲。<br>h=pr=mvr=l*theta<br>量子力学的<br>诺特定理-就是这位美女啦，关于她的故事请阅读。。。。<br>傅立叶变换</p>
]]></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[thisblog]]></title>
      <url>https://arlier1.github.io/2017/05/31/thisblog/</url>
      <content type="html"><![CDATA[<h1 id="this-blog"><a href="#this-blog" class="headerlink" title="this blog"></a>this blog</h1><p>is powerd by hexo</p>
]]></content>
      
        
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[webterm]]></title>
      <url>https://arlier1.github.io/2017/04/21/webterm/</url>
      <content type="html"><![CDATA[<h3 id="SHELLINABOX"><a href="#SHELLINABOX" class="headerlink" title="SHELLINABOX"></a>SHELLINABOX</h3><p>今天下午看到一个帖子，说是在安卓上运行Ubuntu，看了之后觉得很不靠谱。结果就去搜索相关内容，然后想到既然不能再arm上安装linux，那么有没有可能ssh上去服务器呢？这个算是比较简单的，在本地安装一个安卓模拟器或者sshd或者相关的第三方软件（如connectbot,juicessh等）就可以实现。这只是CLI的连接，能不能实现X11端口转发实现GUI呢？Google一下发现也是可以的，如果这个实现了那么几乎就能用手机完全实现xshell的功能了。</p>
<p>作为一个爱折腾的人，总会尝试一下没什么实用价值的功能~~~</p>
<h3 id="JUICESSH"><a href="#JUICESSH" class="headerlink" title="JUICESSH"></a>JUICESSH</h3><p>通过端口转发实现ssh和GUI的软件是juicessh，免费版本没有这个功能，付费版本要登录谷歌账号，可是我的手机根本连不上网。。。。。然后就去找破解版好了，倒是找到了<a href="http://www.52pojie.cn/thread-502507-1-4.html" target="_blank" rel="external">两篇</a>帖子<a href="http://www.52pojie.cn/thread-557375-1-1.html" target="_blank" rel="external">帖子</a> 按照教程使用MT、apk修改器和Zipsigner修改成功了。然而高级功能的端口转发还是用不了，只好做罢。</p>
<h3 id="shellinbox"><a href="#shellinbox" class="headerlink" title="shellinbox"></a>shellinbox</h3><p><img src="http://o98383o2a.bkt.clouddn.com/shellinabox1.png" alt=""><br>那么还有一个类似的方法就是webterminal，网上有非常多的方案，我选择的是<a href="https://code.google.com/p/shellinabox/" target="_blank" rel="external">Shellinabox</a><br>在centos7 中的搭建过程参考 <a href="http://www.linuxidc.com/Linux/2015-08/121865.htm" target="_blank" rel="external">http://www.linuxidc.com/Linux/2015-08/121865.htm</a><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"> yum install epel-release</div><div class="line"> yum install shellinabox</div><div class="line"> vi /etc/sysconfig/shellinaboxd</div><div class="line"> <span class="comment"># 重启服务</span></div><div class="line">sudo systemctl restart shellinabox</div><div class="line"><span class="comment"># 开机启动</span></div><div class="line">systemctl <span class="built_in">enable</span> shellinaboxd</div><div class="line"><span class="comment"># 防火墙</span></div><div class="line">firewall-cmd --permanent --add-port=4200/tcp</div><div class="line">firewall-cmd --reload</div></pre></td></tr></table></figure></p>
<h3 id="配置好了"><a href="#配置好了" class="headerlink" title="配置好了"></a>配置好了</h3><p>打开网址 ： <a href="https://ip-address-of-remote-servers:4200" target="_blank" rel="external">https://ip-address-of-remote-servers:4200</a><br>一个wiki页面： <a href="https://code.google.com/archive/p/shellinabox/wikis/shellinaboxd_man.wiki" target="_blank" rel="external">https://code.google.com/archive/p/shellinabox/wikis/shellinaboxd_man.wiki</a></p>
<p>###<br>事实上，这篇博客就是用shellinabox完成的。简直炫酷！</p>
]]></content>
      
        <categories>
            
            <category> computer </category>
            
        </categories>
        
        
        <tags>
            
            <tag> webterm </tag>
            
        </tags>
        
    </entry>
    
  
  
</search>
